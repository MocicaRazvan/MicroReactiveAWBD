services:
  postgres:
    image: postgres:latest
    container_name: postgres-container-awbd
    environment:
      POSTGRES_DB: wellness
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5544:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - awbd
    restart: unless-stopped
  postgres-invoices:
    image: postgres:latest
    container_name: postgres-container-invoices-awbd
    environment:
      POSTGRES_DB: wellness
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5545:5432"
    volumes:
      - postgres_data_invoices:/var/lib/postgresql/data
    networks:
      - awbd
    restart: unless-stopped

  # utilites
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin-container-awbd
    ports:
      - "9411:9411"
    networks:
      - awbd
    restart: unless-stopped


  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-container-awbd
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - awbd
    restart: unless-stopped

  #config server
  config-server:
    container_name: config-server-container-awbd
    build:
      context: ./config-server
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - awbd
    restart: unless-stopped

    #eureka server
    # https://github.com/spring-projects/spring-boot/issues/35683
  eureka:
    container_name: eureka-container-awbd
    build:
      context: ./service-registry
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    environment:
      # nu ia nici profilul de fapt e de la config trb cu optional la default e cv gen the edgo pt nextjs
      SPRING_PROFILES_ACTIVE: docker
      #      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-container-awbd:8761/eureka

      SPRING_CONFIG_IMPORT: configserver:http://config-server:8888
    #      SPRING_APPLICATION_NAME: service-registry
    networks:
      - awbd
    restart: unless-stopped
    depends_on:
      - config-server

    # gateway
  gateway-service:
    container_name: gateway-container-awbd
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      #aceeasi problema cu config
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CONFIG_IMPORT: configserver:http://config-server:8888
    networks:
      - awbd
    restart: unless-stopped
    depends_on:
      - eureka
      - config-server
      - zipkin
  # user-service
  user-service:
    container_name: user-container-awbd
    build:
      context: .
      dockerfile: user-service/Dockerfile
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CONFIG_IMPORT: configserver:http://config-server:8888
    #      openapi.service.url: http://localhost:8080
    networks:
      - awbd
    restart: unless-stopped
    depends_on:
      - eureka
      - config-server
      - zipkin
      - postgres
  #comment service
  comment-service:
    container_name: comment-container-awbd
    build:
      context: .
      dockerfile: comment-service/Dockerfile
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CONFIG_IMPORT: configserver:http://config-server:8888
    networks:
      - awbd
    restart: unless-stopped
    depends_on:
      - eureka
      - config-server
      - zipkin
      - postgres
    # exercise service
  exercise-service:
    container_name: exercise-container-awbd
    build:
      context: .
      dockerfile: exercise-service/Dockerfile
    ports:
      - "8084:8084"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CONFIG_IMPORT: configserver:http://config-server:8888
    networks:
      - awbd
    restart: unless-stopped
    depends_on:
      - eureka
      - config-server
      - zipkin
      - postgres
    # invoice service
  invoices-service:
    container_name: invoices-container-awbd
    build:
      context: invoices-service
      dockerfile: Dockerfile
    ports:
      - "8087:8087"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CONFIG_IMPORT: configserver:http://config-server:8888
    networks:
      - awbd
    restart: unless-stopped
    depends_on:
      - eureka
      - config-server
      - zipkin
      - rabbitmq
      - postgres-invoices
  # order service
  order-service:
    container_name: order-container-awbd
    build:
      context: .
      dockerfile: order-service/Dockerfile
    ports:
      - "8086:8086"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CONFIG_IMPORT: configserver:http://config-server:8888
    networks:
      - awbd
    restart: unless-stopped
    depends_on:
      - eureka
      - config-server
      - zipkin
      - postgres
      - rabbitmq

  # post service
  post-service:
    container_name: post-container-awbd
    build:
      context: .
      dockerfile: post-service/Dockerfile
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CONFIG_IMPORT: configserver:http://config-server:8888
    networks:
      - awbd
    restart: unless-stopped
    depends_on:
      - eureka
      - config-server
      - zipkin
      - postgres

  # post service
  training-service:
    container_name: training-container-awbd
    build:
      context: .
      dockerfile: training-service/Dockerfile
    ports:
      - "8085:8085"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CONFIG_IMPORT: configserver:http://config-server:8888
    networks:
      - awbd
    restart: unless-stopped
    depends_on:
      - eureka
      - config-server
      - zipkin
      - postgres






volumes:
  postgres_data:
  postgres_data_invoices:
networks:
  awbd:
    driver: bridge
