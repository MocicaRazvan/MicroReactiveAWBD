spring.application.name=gateway-service
# optional pt docker
spring.config.import=optional:configserver:http://localhost:8888
#server.port=8080
###Eureka
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true
##services
#user-service.url=http://user-service
##swaager
#springdoc.enable-native-support=true
#springdoc.swagger-ui.enabled=true
#springdoc.swagger-ui.config-url=/v3/api-docs/swagger-config
#springdoc.swagger-ui.path=/swagger-ui.html
#springdoc.swagger-ui.urls[0].url=/v3/api-docs
#springdoc.swagger-ui.urls[0].name=Gateway
#springdoc.swagger-ui.urls[1].url=/user-service/v3/api-docs
#springdoc.swagger-ui.urls[1].name=User service
#springdoc.swagger-ui.urls[2].url=/post-service/v3/api-docs
#springdoc.swagger-ui.urls[2].name=Post service
#springdoc.swagger-ui.urls[3].url=/comment-service/v3/api-docs
#springdoc.swagger-ui.urls[3].name=Comment service
#springdoc.swagger-ui.urls[4].url=/exercise-service/v3/api-docs
#springdoc.swagger-ui.urls[4].name=Exercise service
#springdoc.swagger-ui.urls[5].url=/training-service/v3/api-docs
#springdoc.swagger-ui.urls[5].name=Training service
#springdoc.swagger-ui.urls[6].url=/order-service/v3/api-docs
#springdoc.swagger-ui.urls[6].name=Order service
#springdoc.swagger-ui.urls[7].url=/invoice-service/v3/api-docs
#springdoc.swagger-ui.urls[7].name=Invoice service
##actuator
#management.endpoint.health.show-details=always
#management.endpoints.web.exposure.include=health
#management.endpoint.health.probes.enabled=true
### resilliance
#management.health.circuitbreakers.enabled=true
### user service
#resilience4j.circuitbreaker.instances.userService.automaticTransitionFromOpenToHalfOpenEnabled=true
#resilience4j.circuitbreaker.instances.userService.failureRateThreshold=50
#resilience4j.circuitbreaker.instances.userService.minimumNumberOfCalls=10
#resilience4j.circuitbreaker.instances.userService.permittedNumberOfCallsInHalfOpenState=5
#resilience4j.circuitbreaker.instances.userService.registerHealthIndicator=true
#resilience4j.circuitbreaker.instances.userService.slidingWindowSize=100
#resilience4j.circuitbreaker.instances.userService.slidingWindowType=COUNT_BASED
#resilience4j.circuitbreaker.instances.userService.slowCallDurationThreshold=2s
#resilience4j.circuitbreaker.instances.userService.slowCallRateThreshold=100
#resilience4j.circuitbreaker.instances.userService.waitDurationInOpenState=10s
#resilience4j.ratelimiter.instances.userService.limitForPeriod=10
#resilience4j.ratelimiter.instances.userService.limitRefreshPeriod=1s
#resilience4j.ratelimiter.instances.userService.timeoutDuration=500ms
#resilience4j.retry.instances.userService.enableExponentialBackoff=true
#resilience4j.retry.instances.userService.enableRandomizedWait=true
#resilience4j.retry.instances.userService.exponentialBackoffMultiplier=2
#resilience4j.retry.instances.userService.maxAttempts=5
#resilience4j.retry.instances.userService.waitDuration=100ms
##zipkin
#management.tracing.sampling.probability=1.0
#management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans