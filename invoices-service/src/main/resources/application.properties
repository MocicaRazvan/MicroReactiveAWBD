spring.application.name=invoice-service
spring.config.import=configserver:http://localhost:8888
#server.port=8087
##db
#spring.datasource.url=jdbc:postgresql://localhost:5545/wellness
#spring.datasource.username=myuser
#spring.datasource.password=mypassword
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.event.merge.entity_copy_observer=allow
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
##Eureka
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true
##swagger
#openapi.service.title=Invoice Service
#openapi.service.version=1.0.0
#openapi.service.url=http://localhost:8080
#springdoc.api-docs.path=/invoice-service/v3/api-docs
#springdoc.swagger-ui.path=/invoice-service/swagger-ui.html
##RabbitMQ
#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest
#order.queue=order-queue
##actuator
#management.endpoint.health.show-details=always
#management.endpoints.web.exposure.include=health
#management.endpoint.health.probes.enabled=true
#feign
#logging.level.org.springframework=DEBUG
#logging.level.io.github.resilience4j=DEBUG
#logging.level.feign.Logger=DEBUG
#spring.cloud.openfeign.circuitbreaker.enabled=true
### resilliance
#management.health.circuitbreakers.enabled=true
### user service
#resilience4j.circuitbreaker.instances.userService.automaticTransitionFromOpenToHalfOpenEnabled=true
#resilience4j.circuitbreaker.instances.userService.failureRateThreshold=50
#resilience4j.circuitbreaker.instances.userService.minimumNumberOfCalls=10
#resilience4j.circuitbreaker.instances.userService.permittedNumberOfCallsInHalfOpenState=5
#resilience4j.circuitbreaker.instances.userService.registerHealthIndicator=true
#resilience4j.circuitbreaker.instances.userService.slidingWindowSize=100
#resilience4j.circuitbreaker.instances.userService.slidingWindowType=COUNT_BASED
#resilience4j.circuitbreaker.instances.userService.slowCallDurationThreshold=2s
#resilience4j.circuitbreaker.instances.userService.slowCallRateThreshold=100
#resilience4j.circuitbreaker.instances.userService.waitDurationInOpenState=10s
#resilience4j.ratelimiter.instances.userService.limitForPeriod=10
#resilience4j.ratelimiter.instances.userService.limitRefreshPeriod=1s
#resilience4j.ratelimiter.instances.userService.timeoutDuration=500ms
#resilience4j.retry.instances.userService.enableExponentialBackoff=true
#resilience4j.retry.instances.userService.enableRandomizedWait=true
#resilience4j.retry.instances.userService.exponentialBackoffMultiplier=2
#resilience4j.retry.instances.userService.maxAttempts=5
#resilience4j.retry.instances.userService.waitDuration=100ms
### training service
#resilience4j.circuitbreaker.instances.trainingService.automaticTransitionFromOpenToHalfOpenEnabled=true
#resilience4j.circuitbreaker.instances.trainingService.failureRateThreshold=50
#resilience4j.circuitbreaker.instances.trainingService.minimumNumberOfCalls=10
#resilience4j.circuitbreaker.instances.trainingService.permittedNumberOfCallsInHalfOpenState=5
#resilience4j.circuitbreaker.instances.trainingService.registerHealthIndicator=true
#resilience4j.circuitbreaker.instances.trainingService.slidingWindowSize=100
#resilience4j.circuitbreaker.instances.trainingService.slidingWindowType=COUNT_BASED
#resilience4j.circuitbreaker.instances.trainingService.slowCallDurationThreshold=2s
#resilience4j.circuitbreaker.instances.trainingService.slowCallRateThreshold=100
#resilience4j.circuitbreaker.instances.trainingService.waitDurationInOpenState=10s
#resilience4j.ratelimiter.instances.trainingService.limitForPeriod=10
#resilience4j.ratelimiter.instances.trainingService.limitRefreshPeriod=1s
#resilience4j.ratelimiter.instances.trainingService.timeoutDuration=500ms
#resilience4j.retry.instances.trainingService.enableExponentialBackoff=true
#resilience4j.retry.instances.trainingService.enableRandomizedWait=true
#resilience4j.retry.instances.trainingService.exponentialBackoffMultiplier=2
#resilience4j.retry.instances.trainingService.maxAttempts=5
#resilience4j.retry.instances.trainingService.waitDuration=100ms
### exercise service
#resilience4j.circuitbreaker.instances.exerciseService.automaticTransitionFromOpenToHalfOpenEnabled=true
#resilience4j.circuitbreaker.instances.exerciseService.failureRateThreshold=50
#resilience4j.circuitbreaker.instances.exerciseService.minimumNumberOfCalls=10
#resilience4j.circuitbreaker.instances.exerciseService.permittedNumberOfCallsInHalfOpenState=5
#resilience4j.circuitbreaker.instances.exerciseService.registerHealthIndicator=true
#resilience4j.circuitbreaker.instances.exerciseService.slidingWindowSize=100
#resilience4j.circuitbreaker.instances.exerciseService.slidingWindowType=COUNT_BASED
#resilience4j.circuitbreaker.instances.exerciseService.slowCallDurationThreshold=2s
#resilience4j.circuitbreaker.instances.exerciseService.slowCallRateThreshold=100
#resilience4j.circuitbreaker.instances.exerciseService.waitDurationInOpenState=10s
#resilience4j.ratelimiter.instances.exerciseService.limitForPeriod=10
#resilience4j.ratelimiter.instances.exerciseService.limitRefreshPeriod=1s
#resilience4j.ratelimiter.instances.exerciseService.timeoutDuration=500ms
#resilience4j.retry.instances.exerciseService.enableExponentialBackoff=true
#resilience4j.retry.instances.exerciseService.enableRandomizedWait=true
#resilience4j.retry.instances.exerciseService.exponentialBackoffMultiplier=2
#resilience4j.retry.instances.exerciseService.maxAttempts=5
#resilience4j.retry.instances.exerciseService.waitDuration=100ms
##zipkin
#management.tracing.sampling.probability=1.0
#management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans